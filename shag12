pip install Flask opencv-python
python
Copy code
from flask import Flask, render_template, request
import cv2
import numpy as np
from io import BytesIO
from PIL import Image

app = Flask(__name__)

def find_patterns(image_path):
    
    img = cv2.imread(image_path)

    
    face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')
    eye_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_eye.xml')

    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    faces = face_cascade.detectMultiScale(gray, scaleFactor=1.3, minNeighbors=5)
    
    patterns = []

    for (x, y, w, h) in faces:
        patterns.append((x, y, w, h))
        
        roi_gray = gray[y:y + h, x:x + w]
        eyes = eye_cascade.detectMultiScale(roi_gray)
        
        for (ex, ey, ew, eh) in eyes:
            patterns.append((x + ex, y + ey, ew, eh))

    return patterns

def overlay_images(image_path, patterns):
    img = cv2.imread(image_path)
    
   
    for (x, y, w, h) in patterns:
        pattern_image = cv2.imread('path/to/your/image.png')          pattern_image = cv2.resize(pattern_image, (w, h))
        img[y:y + h, x:x + w] = pattern_image

    return img

@app.route('/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
       
        file = request.files['image']
        image = Image.open(BytesIO(file.read()))
        image_path = 'uploads/input_image.jpg'
        image.save(image_path)

        
        patterns = find_patterns(image_path)

       
        result_image = overlay_images(image_path, patterns)

        а
        result_image_path = 'uploads/result_image.jpg'
        cv2.imwrite(result_image_path, result_image)

        return render_template('index.html', image_path=image_path, result_image_path=result_image_path)

    return render_template('index.html')

if __name__ == '__main__':
    app.run(debug=True)
Создайте папку uploads в том же каталоге, где находится ваш файл app.py.

Создайте файл templates/index.html:

html
Copy code
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Image Pattern Overlay</title>
</head>
<body>
    <h1>Image Pattern Overlay</h1>
    
    <form method="post" enctype="multipart/form-data">
        <input type="file" name="image" accept="image/*" required>
        <button type="submit">Upload Image</button>
    </form>
    
    {% if image_path %}
        <h2>Original Image</h2>
        <img src="{{ image_path }}" alt="Original Image" style="max-width: 500px;">
        
        {% if result_image_path %}
            <h2>Result Image</h2>
            <img src="{{ result_image_path }}" alt="Result Image" style="max-width: 500px;">
        {% endif %}
    {% endif %}
</body>
</html>

bash

python app.py

